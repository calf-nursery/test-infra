prowjob_namespace: prow
pod_namespace: test-pods
log_level: debug

# NOTE: removed this due to an issue with the token
# in_repo_config:
#   enabled:
#     "*": true

deck:
  spyglass:
    lenses:
    - lens:
        name: metadata
      required_files:
        - ^(?:started|finished)\.json$
      optional_files:
        - ^(?:podinfo|prowjob)\.json$
    - lens:
        config:
        name: buildlog
      required_files:
      - build-log.txt
    - lens:
        name: junit
      required_files:
      - .*/junit.*\.xml
    - lens:
        name: podinfo
      required_files:
      - podinfo.json

plank:
  job_url_prefix_config:
    "*": https://prow.calf-nursery.com/view/
  report_templates:
    '*': '[Full PR test history](https://prow.calf-nursery.com/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}).[Your PR dashboard](https://prow.calf-nursery.com/pr?query=is:pr+state:open+author:{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).'
  default_decoration_config_entries:
  - config:
      gcs_configuration:
        bucket: calf-nursery-prow
        path_strategy: explicit
      gcs_credentials_secret: gcs-credentials
      github_api_endpoints:
        - http://ghproxy
        - https://api.github.com
      utility_images:
        clonerefs: gcr.io/k8s-prow/clonerefs:v20230811-78f080f095
        entrypoint: gcr.io/k8s-prow/entrypoint:v20230811-78f080f095
        initupload: gcr.io/k8s-prow/initupload:v20230811-78f080f095
        sidecar: gcr.io/k8s-prow/sidecar:v20230811-78f080f095

tide:
  sync_period: 2m
  queries:
  - orgs:
    - calf-nursery
    labels:
    - lgtm
    - approved
    missingLabels:
    - needs-rebase
    - do-not-merge/hold
    - do-not-merge/work-in-progress
    - do-not-merge/invalid-owners-file

branch-protection:
  orgs:
    calf-nursery:
      protect: true

sinker:
  resync_period: 1m
  max_prowjob_age: 2h
  max_pod_age: 2h
  terminated_pod_ttl: 30m

presets:
# docker-in-docker (with images/bootstrap) preset
# NOTE: using this also requires using that image,
# ensuring you run your test under either the ENTRYPOINT or:
# /usr/local/bin/runner.sh my-test-command --foo --bar
# AND setting the following on your PodSpec:
# securityContext:
#   privileged: true
- labels:
    preset-dind-enabled: "true"
  env:
  - name: DOCKER_IN_DOCKER_ENABLED
    value: "true"
  volumes:
  # kubekins-e2e legacy path
  - name: docker-graph
    emptyDir: {}
  # krte (normal) path
  - name: docker-root
    emptyDir: {}
  - name: tmp
    hostPath:
      path: /tmp
      type: Directory
  volumeMounts:
  - name: docker-graph
    mountPath: /docker-graph
  - name: docker-root
    mountPath: /var/lib/docker
  - name: tmp
    mountPath: /tmp
# volume mounts for kind
- labels:
    preset-kind-volume-mounts: "true"
  volumeMounts:
    - mountPath: /lib/modules
      name: modules
      readOnly: true
    - mountPath: /sys/fs/cgroup
      name: cgroup
  volumes:
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
